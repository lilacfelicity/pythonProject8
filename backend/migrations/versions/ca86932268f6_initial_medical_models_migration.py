"""Initial medical models migration

Revision ID: ca86932268f6
Revises: 
Create Date: 2025-05-29 02:21:00.627448

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ca86932268f6'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('med_doctors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('specialty', sa.String(length=100), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_med_doctors_id'), 'med_doctors', ['id'], unique=False)
    op.create_table('med_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('last_password_change', sa.DateTime(), nullable=True),
    sa.Column('role', sa.Enum('PATIENT', 'DOCTOR', 'FAMILY_MEMBER', 'ADMIN', name='userrole'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('failed_login_attempts', sa.Integer(), nullable=True),
    sa.Column('account_locked_until', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_med_users_email'), 'med_users', ['email'], unique=True)
    op.create_index(op.f('ix_med_users_id'), 'med_users', ['id'], unique=False)
    op.create_index(op.f('ix_med_users_username'), 'med_users', ['username'], unique=True)
    op.create_table('med_devices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('device_id', sa.String(length=50), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', name='devicestatus'), nullable=False),
    sa.Column('last_seen', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['med_users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_med_device_last_seen', 'med_devices', ['last_seen'], unique=False)
    op.create_index('idx_med_device_user_active', 'med_devices', ['user_id', 'status'], unique=False)
    op.create_index(op.f('ix_med_devices_device_id'), 'med_devices', ['device_id'], unique=True)
    op.create_index(op.f('ix_med_devices_id'), 'med_devices', ['id'], unique=False)
    op.create_table('med_diagnosiss',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['doctor_id'], ['med_doctors.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['med_users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_med_diagnosiss_id'), 'med_diagnosiss', ['id'], unique=False)
    op.create_table('med_family_accesss',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('family_member_id', sa.Integer(), nullable=False),
    sa.Column('relationship_type', sa.String(length=50), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('date_granted', sa.DateTime(), nullable=False),
    sa.Column('expiry_date', sa.DateTime(), nullable=True),
    sa.Column('can_view_diagnoses', sa.Boolean(), nullable=False),
    sa.Column('can_view_medications', sa.Boolean(), nullable=False),
    sa.Column('can_view_lab_tests', sa.Boolean(), nullable=False),
    sa.Column('can_view_visits', sa.Boolean(), nullable=False),
    sa.Column('can_view_vitals', sa.Boolean(), nullable=False),
    sa.Column('can_view_devices', sa.Boolean(), nullable=False),
    sa.Column('receive_critical_alerts', sa.Boolean(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['family_member_id'], ['med_users.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['med_users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_med_family_member_active', 'med_family_accesss', ['family_member_id', 'is_active'], unique=False)
    op.create_index('idx_med_family_patient_active', 'med_family_accesss', ['patient_id', 'is_active'], unique=False)
    op.create_index(op.f('ix_med_family_accesss_id'), 'med_family_accesss', ['id'], unique=False)
    op.create_table('med_lab_tests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('test_date', sa.DateTime(), nullable=False),
    sa.Column('lab_name', sa.String(length=100), nullable=False),
    sa.Column('reference_number', sa.String(length=50), nullable=True),
    sa.Column('doctor_id', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['med_doctors.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['med_users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_med_lab_tests_id'), 'med_lab_tests', ['id'], unique=False)
    op.create_table('med_medical_tests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('ordered_by', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('results', sa.Text(), nullable=False),
    sa.Column('attachment_url', sa.String(length=500), nullable=True),
    sa.ForeignKeyConstraint(['ordered_by'], ['med_doctors.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['med_users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_med_medical_tests_id'), 'med_medical_tests', ['id'], unique=False)
    op.create_table('med_medications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('dosage', sa.String(length=100), nullable=False),
    sa.Column('frequency', sa.String(length=100), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('prescribed_by', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['med_users.id'], ),
    sa.ForeignKeyConstraint(['prescribed_by'], ['med_doctors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_med_medications_id'), 'med_medications', ['id'], unique=False)
    op.create_table('med_patient_doctors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('is_primary', sa.Boolean(), nullable=False),
    sa.Column('assigned_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['doctor_id'], ['med_doctors.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['med_users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_med_patient_doctors_id'), 'med_patient_doctors', ['id'], unique=False)
    op.create_table('med_user_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('patronymic', sa.String(length=50), nullable=True),
    sa.Column('birth_date', sa.DateTime(), nullable=False),
    sa.Column('gender', sa.String(length=10), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=False),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('emergency_contact', sa.String(length=100), nullable=True),
    sa.Column('blood_type', sa.String(length=5), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('weight', sa.Integer(), nullable=True),
    sa.Column('allergies', sa.Text(), nullable=True),
    sa.Column('chronic_conditions', sa.Text(), nullable=True),
    sa.Column('insurance_number', sa.String(length=50), nullable=True),
    sa.Column('insurance_company', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['med_users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_med_user_profiles_id'), 'med_user_profiles', ['id'], unique=False)
    op.create_table('med_visits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('reason', sa.String(length=500), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['med_doctors.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['med_users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_med_visits_id'), 'med_visits', ['id'], unique=False)
    op.create_table('med_biochemistrys',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lab_test_id', sa.Integer(), nullable=False),
    sa.Column('glucose', sa.Float(), nullable=True),
    sa.Column('creatinine', sa.Float(), nullable=True),
    sa.Column('urea', sa.Float(), nullable=True),
    sa.Column('alt', sa.Float(), nullable=True),
    sa.Column('ast', sa.Float(), nullable=True),
    sa.Column('total_bilirubin', sa.Float(), nullable=True),
    sa.Column('total_protein', sa.Float(), nullable=True),
    sa.Column('albumin', sa.Float(), nullable=True),
    sa.Column('sodium', sa.Float(), nullable=True),
    sa.Column('potassium', sa.Float(), nullable=True),
    sa.Column('calcium', sa.Float(), nullable=True),
    sa.Column('crp', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['lab_test_id'], ['med_lab_tests.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('lab_test_id')
    )
    op.create_index(op.f('ix_med_biochemistrys_id'), 'med_biochemistrys', ['id'], unique=False)
    op.create_table('med_blood_counts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lab_test_id', sa.Integer(), nullable=False),
    sa.Column('hemoglobin', sa.Float(), nullable=True),
    sa.Column('erythrocytes', sa.Float(), nullable=True),
    sa.Column('hematocrit', sa.Float(), nullable=True),
    sa.Column('leukocytes', sa.Float(), nullable=True),
    sa.Column('platelets', sa.Float(), nullable=True),
    sa.Column('esr', sa.Float(), nullable=True),
    sa.Column('neutrophils_percent', sa.Float(), nullable=True),
    sa.Column('lymphocytes_percent', sa.Float(), nullable=True),
    sa.Column('monocytes_percent', sa.Float(), nullable=True),
    sa.Column('eosinophils_percent', sa.Float(), nullable=True),
    sa.Column('basophils_percent', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['lab_test_id'], ['med_lab_tests.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('lab_test_id')
    )
    op.create_index(op.f('ix_med_blood_counts_id'), 'med_blood_counts', ['id'], unique=False)
    op.create_table('med_cardiac_markerss',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lab_test_id', sa.Integer(), nullable=False),
    sa.Column('troponin', sa.Float(), nullable=True),
    sa.Column('bnp', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['lab_test_id'], ['med_lab_tests.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('lab_test_id')
    )
    op.create_index(op.f('ix_med_cardiac_markerss_id'), 'med_cardiac_markerss', ['id'], unique=False)
    op.create_table('med_heart_datas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('device_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('heart_rate', sa.Integer(), nullable=True),
    sa.Column('spo2', sa.Float(), nullable=True),
    sa.Column('hrv', sa.Float(), nullable=True),
    sa.Column('blood_pressure_systolic', sa.Integer(), nullable=True),
    sa.Column('blood_pressure_diastolic', sa.Integer(), nullable=True),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('activity_level', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['med_devices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_{TABLE_PREFIX}heart_device_timestamp', 'med_heart_datas', ['device_id', 'timestamp'], unique=False)
    op.create_index(op.f('ix_med_heart_datas_id'), 'med_heart_datas', ['id'], unique=False)
    op.create_table('med_lipid_panels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lab_test_id', sa.Integer(), nullable=False),
    sa.Column('total_cholesterol', sa.Float(), nullable=True),
    sa.Column('hdl_cholesterol', sa.Float(), nullable=True),
    sa.Column('ldl_cholesterol', sa.Float(), nullable=True),
    sa.Column('triglycerides', sa.Float(), nullable=True),
    sa.Column('cholesterol_hdl_ratio', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['lab_test_id'], ['med_lab_tests.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('lab_test_id')
    )
    op.create_index(op.f('ix_med_lipid_panels_id'), 'med_lipid_panels', ['id'], unique=False)
    op.create_table('med_sensor_readings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('device_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('humidity', sa.Float(), nullable=True),
    sa.Column('pressure', sa.Float(), nullable=True),
    sa.Column('light', sa.Float(), nullable=True),
    sa.Column('motion', sa.Integer(), nullable=True),
    sa.Column('custom_value1', sa.Float(), nullable=True),
    sa.Column('custom_value2', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['med_devices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_med_sensor_device_timestamp', 'med_sensor_readings', ['device_id', 'timestamp'], unique=False)
    op.create_index(op.f('ix_med_sensor_readings_id'), 'med_sensor_readings', ['id'], unique=False)
    op.create_table('med_thyroid_panels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lab_test_id', sa.Integer(), nullable=False),
    sa.Column('tsh', sa.Float(), nullable=True),
    sa.Column('t3_free', sa.Float(), nullable=True),
    sa.Column('t4_free', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['lab_test_id'], ['med_lab_tests.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('lab_test_id')
    )
    op.create_index(op.f('ix_med_thyroid_panels_id'), 'med_thyroid_panels', ['id'], unique=False)
    op.create_table('med_tumor_markerss',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lab_test_id', sa.Integer(), nullable=False),
    sa.Column('psa', sa.Float(), nullable=True),
    sa.Column('cea', sa.Float(), nullable=True),
    sa.Column('ca_125', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['lab_test_id'], ['med_lab_tests.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('lab_test_id')
    )
    op.create_index(op.f('ix_med_tumor_markerss_id'), 'med_tumor_markerss', ['id'], unique=False)
    op.create_table('med_vitamin_levelss',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lab_test_id', sa.Integer(), nullable=False),
    sa.Column('vitamin_b12', sa.Float(), nullable=True),
    sa.Column('vitamin_d', sa.Float(), nullable=True),
    sa.Column('ferritin', sa.Float(), nullable=True),
    sa.Column('iron', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['lab_test_id'], ['med_lab_tests.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('lab_test_id')
    )
    op.create_index(op.f('ix_med_vitamin_levelss_id'), 'med_vitamin_levelss', ['id'], unique=False)

    op.execute("""
            INSERT INTO med_users (username, email, password_hash, role, is_active, created_at)
            VALUES ('demo', 'ekaterina.smirnova@email.com', 
                    '5a9af32ebaaecadb8cbb440e93f2def4fce6068e700dfd71d7f34913d4e529cf', 
                    'PATIENT', true, '01.09.2024');
        """)

    op.execute("""
            INSERT INTO med_user_profiles (user_id, first_name, last_name, patronymic, birth_date, gender, phone_number, blood_type, height, weight)
            SELECT id, 'Екатерина', 'Смирнова', 'Алексеевна', '2001-03-11', 'female', '+7 (999) 123-45-67', 'A(II)', 165, 58
            FROM med_users WHERE email = 'ekaterina.smirnova@email.com';
        """)

    op.execute("""
            INSERT INTO med_devices (name, device_id, user_id, status, created_at)
            SELECT 'Пульсоксиметр', 'PULSE_001', id, 'ACTIVE', '01.09.2024' FROM med_users WHERE email = 'ekaterina.smirnova@email.com';

            INSERT INTO med_devices (name, device_id, user_id, status, created_at)
            SELECT 'Тонометр', 'BP_001', id, 'ACTIVE', '01.09.2024' FROM med_users WHERE email = 'ekaterina.smirnova@email.com';

            INSERT INTO med_devices (name, device_id, user_id, status, created_at)
            SELECT 'Мультисенсор', 'MULTI_001', id, 'ACTIVE', '01.09.2024' FROM med_users WHERE email = 'ekaterina.smirnova@email.com';
        """)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_med_vitamin_levelss_id'), table_name='med_vitamin_levelss')
    op.drop_table('med_vitamin_levelss')
    op.drop_index(op.f('ix_med_tumor_markerss_id'), table_name='med_tumor_markerss')
    op.drop_table('med_tumor_markerss')
    op.drop_index(op.f('ix_med_thyroid_panels_id'), table_name='med_thyroid_panels')
    op.drop_table('med_thyroid_panels')
    op.drop_index(op.f('ix_med_sensor_readings_id'), table_name='med_sensor_readings')
    op.drop_index('idx_med_sensor_device_timestamp', table_name='med_sensor_readings')
    op.drop_table('med_sensor_readings')
    op.drop_index(op.f('ix_med_lipid_panels_id'), table_name='med_lipid_panels')
    op.drop_table('med_lipid_panels')
    op.drop_index(op.f('ix_med_heart_datas_id'), table_name='med_heart_datas')
    op.drop_index('idx_{TABLE_PREFIX}heart_device_timestamp', table_name='med_heart_datas')
    op.drop_table('med_heart_datas')
    op.drop_index(op.f('ix_med_cardiac_markerss_id'), table_name='med_cardiac_markerss')
    op.drop_table('med_cardiac_markerss')
    op.drop_index(op.f('ix_med_blood_counts_id'), table_name='med_blood_counts')
    op.drop_table('med_blood_counts')
    op.drop_index(op.f('ix_med_biochemistrys_id'), table_name='med_biochemistrys')
    op.drop_table('med_biochemistrys')
    op.drop_index(op.f('ix_med_visits_id'), table_name='med_visits')
    op.drop_table('med_visits')
    op.drop_index(op.f('ix_med_user_profiles_id'), table_name='med_user_profiles')
    op.drop_table('med_user_profiles')
    op.drop_index(op.f('ix_med_patient_doctors_id'), table_name='med_patient_doctors')
    op.drop_table('med_patient_doctors')
    op.drop_index(op.f('ix_med_medications_id'), table_name='med_medications')
    op.drop_table('med_medications')
    op.drop_index(op.f('ix_med_medical_tests_id'), table_name='med_medical_tests')
    op.drop_table('med_medical_tests')
    op.drop_index(op.f('ix_med_lab_tests_id'), table_name='med_lab_tests')
    op.drop_table('med_lab_tests')
    op.drop_index(op.f('ix_med_family_accesss_id'), table_name='med_family_accesss')
    op.drop_index('idx_med_family_patient_active', table_name='med_family_accesss')
    op.drop_index('idx_med_family_member_active', table_name='med_family_accesss')
    op.drop_table('med_family_accesss')
    op.drop_index(op.f('ix_med_diagnosiss_id'), table_name='med_diagnosiss')
    op.drop_table('med_diagnosiss')
    op.drop_index(op.f('ix_med_devices_id'), table_name='med_devices')
    op.drop_index(op.f('ix_med_devices_device_id'), table_name='med_devices')
    op.drop_index('idx_med_device_user_active', table_name='med_devices')
    op.drop_index('idx_med_device_last_seen', table_name='med_devices')
    op.drop_table('med_devices')
    op.drop_index(op.f('ix_med_users_username'), table_name='med_users')
    op.drop_index(op.f('ix_med_users_id'), table_name='med_users')
    op.drop_index(op.f('ix_med_users_email'), table_name='med_users')
    op.drop_table('med_users')
    op.drop_index(op.f('ix_med_doctors_id'), table_name='med_doctors')
    op.drop_table('med_doctors')
    # ### end Alembic commands ###
